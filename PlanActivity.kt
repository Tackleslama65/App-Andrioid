package com.example.myapplication

import android.app.Dialog
import android.content.Intent
import android.graphics.Rect
import android.os.Bundle
import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.Button
import android.widget.SearchView
import android.widget.Spinner
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.ContextCompat.startActivity
import androidx.lifecycle.lifecycleScope
import androidx.recyclerview.widget.DefaultItemAnimator
import androidx.recyclerview.widget.GridLayoutManager
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.google.android.material.floatingactionbutton.FloatingActionButton
import kotlinx.coroutines.launch
import java.time.LocalDate

// –≠–∫—Ä–∞–Ω "–ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"
class PlanActivity : AppCompatActivity() {

    private lateinit var workoutAdapter: WorkoutAdapter // –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è RecyclerView
    private lateinit var database: WorkoutDatabase // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö

    //  private lateinit var workoutList: List<WorkoutEntity>
    private lateinit var recyclerView: RecyclerView
    private lateinit var workoutList: MutableList<WorkoutEntity>

    private lateinit var filterTypeSpinner: Spinner
    private lateinit var searchView: SearchView
    private lateinit var originalWorkoutList: List<WorkoutEntity>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_plan) // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–∫–µ—Ç–∞ –¥–ª—è Activity

        workoutList = mutableListOf() // –ó–¥–µ—Å—å –∑–∞–≥—Ä—É–∑–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ –ë–î
        workoutAdapter = WorkoutAdapter(workoutList) { workout -> onWorkoutClick(workout) }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        database = WorkoutDatabase.getInstance(this)

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RecyclerView
        recyclerView = findViewById<RecyclerView>(R.id.recycler_view_workouts) // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º recyclerView
        workoutAdapter.onSelectionModeChanged = { isSelectionMode ->
            updateButtonsVisibility(isSelectionMode) // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞
        }

        recyclerView.adapter = workoutAdapter // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä
        recyclerView.itemAnimator = DefaultItemAnimator() // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ RecyclerView
        setupRecyclerView()

        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ RecyclerView
        val spacing = resources.getDimensionPixelSize(R.dimen.recycler_spacing)
        recyclerView.addItemDecoration(SpaceItemDecoration(spacing))

        // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        val addButton = findViewById<Button>(R.id.fab)
        addButton.setOnClickListener {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            val dialog = AddWorkoutDialogFragment { name, type, date ->
                addWorkoutToDatabase(name, type, date) // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            }
            dialog.show(supportFragmentManager, "AddWorkoutDialogFragment")
        }

        // –ö–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∏ –æ—Ç–º–µ–Ω—ã –≤—ã–±–æ—Ä–∞
        val deleteButton = findViewById<Button>(R.id.btn_delete_selected)
        val cancelButton = findViewById<Button>(R.id.btn_cancel_selection)

        // –°–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
        deleteButton.visibility = View.GONE
        cancelButton.visibility = View.GONE

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
        deleteButton.setOnClickListener {
            val selectedWorkouts =
                workoutAdapter.getSelectedWorkouts() // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            if (selectedWorkouts.isNotEmpty()) {
                deleteWorkoutsFromDatabase(selectedWorkouts) // –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                workoutAdapter.deleteSelectedWorkouts() // –£–¥–∞–ª—è–µ–º –∏–∑ –∞–¥–∞–ø—Ç–µ—Ä–∞
                updateButtonsVisibility(false) // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –≤—ã–±–æ—Ä–∞
        cancelButton.setOnClickListener {
            workoutAdapter.clearSelection() // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
            updateButtonsVisibility(false) // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
        }



        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Spinner –∏ SearchView
        filterTypeSpinner = findViewById(R.id.filterTypeSpinner)
        searchView = findViewById(R.id.searchView)

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Spinner
        val workoutTypes = listOf("–í—Å–µ", "–°–∏–ª–∞", "–ú–∞—Å—Å–∞")
        val spinnerAdapter = ArrayAdapter(this, android.R.layout.simple_spinner_item, workoutTypes)
        spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
        filterTypeSpinner.adapter = spinnerAdapter

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        filterTypeSpinner.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
            override fun onItemSelected(parent: AdapterView<*>, view: View?, position: Int, id: Long) {
                applyFilters()
            }

            override fun onNothingSelected(parent: AdapterView<*>) {}
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {
            override fun onQueryTextSubmit(query: String?): Boolean {
                applyFilters()
                return true
            }

            override fun onQueryTextChange(newText: String?): Boolean {
                applyFilters()
                return true
            }
        })






        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        loadWorkoutsFromDatabase()
    }


    private fun setupRecyclerView() {
        val layoutManager = TwoColumnStackFromEndLayoutManager()
        recyclerView.layoutManager = layoutManager


    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è –∏ –æ—Ç–º–µ–Ω—ã –≤—ã–±–æ—Ä–∞.
     *
     * @param isSelectionMode –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞.
     */
    private fun updateButtonsVisibility(isSelectionMode: Boolean) {
        val deleteButton = findViewById<Button>(R.id.btn_delete_selected)
        val cancelButton = findViewById<Button>(R.id.btn_cancel_selection)

        if (isSelectionMode) {
            deleteButton.visibility = View.VISIBLE // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
            cancelButton.visibility = View.VISIBLE // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
        } else {
            deleteButton.visibility = View.GONE // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
            cancelButton.visibility = View.GONE // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
     *
     * @param name –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.
     * @param type –¢–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.
     */
    private fun addWorkoutToDatabase(name: String, type: String, date: LocalDate) {
        lifecycleScope.launch {
            val workout =
                WorkoutEntity(name = name, type = type, date = date) // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            database.workoutDao().insertWorkout(workout) // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            loadWorkoutsFromDatabase() // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
            //recyclerView.scrollToPosition(0)
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∞–¥–∞–ø—Ç–µ—Ä.
     */
    private fun loadWorkoutsFromDatabase() {
        lifecycleScope.launch {
            val workouts = database.workoutDao().getAllWorkouts() // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ –±–∞–∑—ã

            originalWorkoutList = workouts // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
            workoutList = workouts.toMutableList()
            applyFilters() // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        }
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
     *
     * @param workouts –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
     */
    private fun deleteWorkoutsFromDatabase(workouts: List<WorkoutEntity>) {
        lifecycleScope.launch {
            database.workoutDao().deleteWorkouts(workouts) // –£–¥–∞–ª—è–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ –±–∞–∑—ã
            loadWorkoutsFromDatabase() // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
        }
    }

    private fun onWorkoutClick(workout: WorkoutEntity) {
        lifecycleScope.launch {
            val dao = database.exerciseResultDao()
            val hasExercises =
                dao.getWorkoutHasExercises(workout.id) // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è

            if (hasExercises) {
                // ‚úÖ –ï—Å–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –µ—Å—Ç—å ‚Üí —Å—Ä–∞–∑—É –æ—Ç–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω —Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏
                val intent = Intent(this@PlanActivity, WorkoutSetupActivity::class.java)
                intent.putExtra("WORKOUT_ID", workout.id)
                startActivity(intent)
            } else {
                // ‚úÖ –ï—Å–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –Ω–µ—Ç ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø
                showMuscleGroupDialog(workout)
            }
        }
    }

    private fun showMuscleGroupDialog(workout: WorkoutEntity) {

        val dialog = Dialog(this)
        dialog.setContentView(R.layout.dialog_group_type)
        val btnGroup1 = dialog.findViewById<Button>(R.id.btnGroup1)
        val btnGroup2 = dialog.findViewById<Button>(R.id.btnGroup2)
        val btnGroup3 = dialog.findViewById<Button>(R.id.btnGroup3)
        val btnGroup4 = dialog.findViewById<Button>(R.id.btnGroup4)
        val btnGroup5 = dialog.findViewById<Button>(R.id.btnGroup5)
        val btnCancel = dialog.findViewById<Button>(R.id.btnCancel)

        val clickListener = View.OnClickListener { view ->
            val groupCount = when (view.id) {
                R.id.btnGroup1 -> 1
                R.id.btnGroup2 -> 2
                R.id.btnGroup3 -> 3
                R.id.btnGroup4 -> 4
                R.id.btnGroup5 -> 5
                else -> 0
            }
            dialog.dismiss()
            openWorkoutSetupScreen(workout.id, groupCount) // –ü–µ—Ä–µ–¥–∞—ë–º workout.id –∏ groupCount
        }
        dialog.window?.setBackgroundDrawableResource(android.R.color.transparent) // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω

        btnGroup1.setOnClickListener(clickListener)
        btnGroup2.setOnClickListener(clickListener)
        btnGroup3.setOnClickListener(clickListener)
        btnGroup4.setOnClickListener(clickListener)
        btnGroup5.setOnClickListener(clickListener)
        btnCancel.setOnClickListener { dialog.dismiss() }

        dialog.show()
    }

    private fun openWorkoutSetupScreen(workoutId: Int, groupCount: Int) {
        val intent = Intent(this, WorkoutSetupActivity::class.java)
        intent.putExtra("WORKOUT_ID", workoutId)
        intent.putExtra("GROUP_COUNT", groupCount)
        startActivity(intent)
    }

    private fun applyFilters() {
        val selectedType = filterTypeSpinner.selectedItem as String
        val searchQuery = searchView.query.toString()

        val filteredList = originalWorkoutList.filter { workout ->
            // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            val matchesType = selectedType == "–í—Å–µ" || workout.type == selectedType

            // –§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            val matchesName = workout.name.contains(searchQuery, ignoreCase = true)

            matchesType && matchesName
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–∞–ø—Ç–µ—Ä —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º
        workoutAdapter.updateData(filteredList)
    }

}










// –ö–ª–∞—Å—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç—Å—Ç—É–ø–æ–≤ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ RecyclerView
class SpaceItemDecoration(private val spacing: Int) : RecyclerView.ItemDecoration() {
    override fun getItemOffsets(
        outRect: Rect,
        view: View,
        parent: RecyclerView,
        state: RecyclerView.State
    ) {
        outRect.left = spacing
        outRect.right = spacing
        outRect.bottom = spacing
        outRect.top = spacing
    }
}